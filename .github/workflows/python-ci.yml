name: Python CI

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'python/sadi.python/**'
      - '.github/workflows/python-ci.yml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'python/sadi.python/**'
      - '.github/workflows/python-ci.yml'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libtidy-dev
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('python/sadi.python/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install package and dependencies
      working-directory: python/sadi.python
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -e .
    
    - name: Run compatibility tests (no dependencies required)
      working-directory: python/sadi.python
      run: python test_compatibility.py
    
    - name: Run comprehensive test suite
      working-directory: python/sadi.python
      run: python run_tests.py
    
    - name: Test package installation
      working-directory: python/sadi.python
      run: |
        python -c "import sadi; print('SADI package imported successfully')"
        python -c "from sadi import sadi; print('SADI core module imported successfully')"

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel build twine
    
    - name: Build package
      working-directory: python/sadi.python
      run: |
        python -m build --no-isolation
    
    - name: Check package
      working-directory: python/sadi.python
      run: |
        twine check dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-${{ github.sha }}
        path: python/sadi.python/dist/
        retention-days: 30

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run flake8
      working-directory: python/sadi.python
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      working-directory: python/sadi.python
      run: |
        black --check --diff .
      continue-on-error: true
    
    - name: Check import sorting with isort
      working-directory: python/sadi.python
      run: |
        isort --check-only --diff .
      continue-on-error: true